import numpy as np
x = np.array( [[ 1, 2, 3] ,
               [ 4, 5, 6] ,
               [ 7, 8, 9] ,
               [ 11, 12, 13] ,
               [ 14, 15, 16] ,
               [ 17, 18, 19],
               [ 21, 22, 23] ,
               [ 24, 25, 26] ,
               [ 27, 28, 29] ])

print(x[1]) # 1번째 행 [4 5 6]

print(x[ : , 1]) # 전체 행의 1번째 열 [ 2  5  8 12 15 18 22 25 28]

print(x[1,1]) # 1번째 행 1번째 열 5

print(x[1,1:2]) # 1번쨰 행 1부터 2번쨰 열 전까지 [5]

print(x[1:2,1:2]) #1부터 2번째 행전까지 1부터 2번쨰 열 전까지  [[5]]

dataset = np.array ( [ [ 2, 4, 6, 8, 3, 2, 5] ,
                       [ 7, 5, 3, 1, 6, 8, 0] ,
                       [ 1, 3, 2, 1, 0, 0, 8] ] )

print(np.max (dataset, axis=1) - np.min(dataset, axis=1)) # 각 열의 최대 - 최소 [6 8 8]

a = np.array ( [ 15.0, 20.0, 22.0, 75.0, 40.0, 35.0 ] )
a = a * .01
print(a) [0.15 0.2  0.22 0.75 0.4  0.35]

a = np.array ( [ [ 1, 2, 3, 4] ] )
b = np.array ( [ [ 1, 1, 1, 0],
                 [ 1, 1, 0, 1],
                 [ 1, 0, 1, 1],
                 [ 0, 1, 1, 1] ] )
c = np.dot (a, b) #행렬 곱 [[6 7 8 9]]
print(c) 

a = np.ones((3,3),float)
b = np.zeros((3,3),float)
b = b + 2.*np.identity(3) #identity : 대각 성분 1인 행렬 n x n 생성
c = a + b  
print(c) 
#[[3. 1. 1.]
# [1. 3. 1.]
# [1. 1. 3.]]